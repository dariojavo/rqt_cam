#! /usr/bin/env python

# Code for requesting and publishing data for available cameras generated by cam_v4l2_node
import rospy
from ecam_v4l2.srv import *
from sensor_msgs.msg import Image
from ecam_v4l2.msg import image
import numpy as np
import cv2
from cv_bridge import CvBridge
from collections import defaultdict
import json
import os


if __name__ == '__main__':

    # In ROS, nodes are uniquely named. If two nodes with the same
    # name are launched, the previous one is kicked off. The
    # anonymous=True flag means that rospy will choose a unique
    # name for our 'listener' node so that multiple listeners can
    # run simultaneously.
    rospy.init_node('cameras_parameters', anonymous=True)

    ### Read all camera controls menu from each camera ###

    # wait for this sevice to be running
    rospy.wait_for_service('QueryControl')
    
    # Create an object of the type TriggerRequest. We nned a TriggerRequest for a Trigger service
    req = query_controlRequest()

    # Get current available topics
    topics = rospy.get_published_topics()

    # Get all See3CAM availables
    cameras = []
    for topic in topics:
        for words in topic:
            if  'See3CAM' in words:
                if 'view' not in words:
                    cameras.append(words)

    print('Detected cameras: ')
    print(cameras)

    # Create the connection to the service. Remember it's a Trigger service
    camera_format = rospy.ServiceProxy('EnumerateFormat', enum_format)
    
    req = enum_formatRequest()
    res = enum_formatResponse()
    req.cam_name = 'See3CAM_24CUG_3C22940B'
    req.type = 1
    req.height = 1280
    req.width = 720
    req.pix_fmt = ''
    # Now send the request through the connection
    
    print(camera_format(req))

    # Create the connection to the service. Remember it's a Trigger service
    set_camera_format = rospy.ServiceProxy('SetFormat', set_format)

    set_req = set_formatRequest()

    # Assuming 3 cameras of the same type See3CAM
    cont = 0
    for cam in cameras:
        cont += 1
        set_req.cam_name = cam.replace('/','')
        set_req.format = 'MJPG'
        set_req.height = 1280
        set_req.width = 720
        set_req.numerator = 1
        set_req.denominator = 60

        set_camera_format(set_req)
        

    # spin() simply keeps python from exiting until this node is stopped
    #rospy.spin()